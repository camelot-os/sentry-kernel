name: enclave firmware quality checks

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

env:
  CI: true

jobs:
  sonar-scanner:
    name: SonarQube Quality Checks
    defaults:
      run:
        shell: bash
    runs-on: orange-classic
    container:
      image: docker-kulos-nexus.orange.ledgerlabs.net/codequalbot:v1.0.0
      credentials:
        username: ${{ secrets.KULOS_NEXUS_CI_RO_USER }}
        password: ${{ secrets.KULOS_NEXUS_CI_RO_PASSWORD }}

    steps:
      - name: Setup git
        uses: embedded-devops/action-setup-git@main
        with:
          ssh_key: ${{ secrets.GHE_SSH_KEY }}
          ssh_known_hosts: ${{ secrets.GHE_HOST_KEY }}
      - name: Setup Meson
        uses: embedded-devops/action-setup-meson@main
        with:
          token: ${{ secrets.GHE_CI_TOKEN }}
          crossfiles_git: 'outpost/meson-cross-files'
          crossfiles_ref: 'main'
      - name: install prerequisites pkg
        uses: embedded-devops/action-install-pkg@v2.0
        with:
          packages: 'device-tree-compiler,curl,lld'
      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: nightly
          targets: thumbv7m-none-eabi,thumbv7em-none-eabi,thumbv7em-none-eabihf
          components: clippy,rustfmt
      - name: Setup C toolchain
        uses: embedded-devops/action-setup-compiler@main
        with:
          compiler: gcc
          triple: arm-none-eabi
          ref: ${{ matrix.toolchain }}
      - name: Set pypi credentials
        uses: embedded-devops/action-pypi@main
        with:
          pypi_server_url: 'https://nexus.orange.ledgerlabs.net/repository/kulos-pypi'
          pypi_server_need_authentication: true
          pypi_server_login: ${{ secrets.KULOS_NEXUS_CI_RO_USER }}
          pypi_server_password: ${{ secrets.KULOS_NEXUS_CI_RO_PASSWORD }}
      - uses: actions/checkout@v3
      - name: install python deps
        run: |
          pip3 install -U setuptools setuptools_scm
          pip3 install -r requirements.txt
      - name: Meson Setup
        uses: embedded-devops/action-meson@main
        with:
          actions: '["prefetch", "setup"]'
          cross_files: ${{ format('{0}/{1}', env.MESON_CROSS_FILES, 'arm-none-eabi-gcc.ini') }}
          options: '-Doptimization=0 -Db_coverage=true -Dwith_tests=true -Dkconfig:config=configs/stm32f429i_disc1_defconfig'
      - name: Sonar Scanner
        uses: embedded-devops/action-codequal@main
        with:
          host: ${{ secrets.SONAR_HOST }}
          token: ${{ secrets.SONAR_TOKEN }}
          project: sentry-kernel
          build_cmd: 'ninja -C builddir all && ninja -C builddir test && ninja -C builddir sonar'
