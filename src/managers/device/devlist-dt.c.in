// SPDX-FileCopyrightText: 2023 Ledger SAS
// SPDX-License-Identifier: Apache-2.0

#include <sentry/ktypes.h>
#include <uapi/handle.h>
#include <uapi/device.h>
#include <sentry/managers/device.h>

static const device_t devices[] = {
    {% for device in dts.get_mappable() -%}
    {% if device.status and device.status == "okay" -%}
    {
        /* device {{ device.label }} declaration */
        .devinfo = {
            .handle = {
                .dev_cap = 0x0UL,
                .reserved = 0x0UL,
                .id = {{ "0x%xUL"|format(loop.index) }},
                .familly = HANDLE_DEVICE,
            },
            .baseaddr = {{ "0x%08x"|format(device.reg[0]) }},
            .size = {{ "0x%08x"|format(device.reg[1]) }},
            .num_interrupt = 0, // FIXME: handle IT in DTS
            .its = {
                {% for ios in [ 1,2,3,4,5,6,7,8] -%}
                { .it_controler = 0UL, .it_num = 0UL, .it_handler = NULL },
                {% endfor -%}
            },
            .num_ios = 0, // FIXME: parse DTS device pinmux cfg
            .ios = {
                {% for ios in [ 1,2,3,4,5,6,7,8] -%}
                { .port = 0UL, .pin = 0UL, .config = 0UL },
                {% endfor -%}
            },
        },
        .capability = 0x0UL,
        {% if device.clocks and not device.label == "rcc" -%}
        {% set _, bus_id, clk_msk = device.clocks -%}
        .clk_id = {{ "%#08xUL"|format(clk_msk) }},
        .bus_id = {{ bus_id }},
        {% else -%}
        .clk_id = 0x0UL,
        .bus_id = 0x0UL,
        {% endif -%}
    },
    {% endif -%}
    {% endfor %}
};
