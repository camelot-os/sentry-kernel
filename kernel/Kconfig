rsource 'src/arch/Kconfig'
rsource 'src/drivers/Kconfig'
rsource 'src/startup/Kconfig'
rsource 'src/managers/Kconfig'

menu "Build mode"

config STANDALONE_MODE
	bool "Standardone mode"
	help
	  Allows standalone mode. No external task is built, Sentry only
	  execute itself and its own services and platform init.
	  Useful for basic platform debug and testing and architecture port

# debug relative options. Only set through build type. For security relative
# see src/security/Kconfig
config BUILD_WITH_GDB
	bool


choice
	bool "Build type"
config BUILD_TARGET_DEBUG
	bool "Build in debug mode"
	help
	  Allows ggdb support, debug options, disable hardening and optimisation that
	  may br ptoblematic for debugging purpose.
	  MUST NOT BE USED FOR DELIVERY.
	select BUILD_WITH_GDB

config BUILD_TARGET_RELEASE
	bool "Build in release mode"
	help
	  Remove all debugging-relative flags, activate all hardening mechanisms
	select SECU_SSP_USER
	select SECU_SSP_KERN
	select SECU_HW_SETNCHECK
	select SECU_NO_COMPTOZERO
	select SECU_LOOP_DBLE_IDX

config BUILD_TARGET_AUTOTEST
	bool "Built Sentry in autotest mode"
	help
	  Build autotest task and activate kernel autotest flag. The kernel
	  do no more parse the task metadata table but instead load the autotest
	  app and enable autotest mode in managers and syscalls kernel-side.
	  This allows a lot of runtime-testing, that can be controlled through
	  a dedicated, autotest-enabled specific syscall used by the autotest app,
	  that can be triggered through a serial communication with a CI or a test PC
	  to generate Sentry test reports.
	select SECU_SSP_USER
	select SECU_SSP_KERN
	select SECU_HW_SETNCHECK
	select SECU_NO_COMPTOZERO
	select SECU_LOOP_DBLE_IDX
endchoice

config WITH_JTAG_CONNECTED
	bool "Built for target with JTAG connected, active auto-breakpoints"
	default n
	depends on BUILD_TARGET_DEBUG || BUILD_TARGET_AUTOTEST

endmenu
