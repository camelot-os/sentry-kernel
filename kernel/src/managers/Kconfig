menu "Managers"

menu "Task manager"

config SVC_EXCHANGE_AREA_LEN
	int "Size of the SVC_Exchange area"
	range 64 1024
	default 128
	help
	  length (in bytes) of the user/kernel exchange area

config TASK_MAGIC_VALUE
	hex "task magic value number"
	default 0xdeadcafe
	help
	  Default tasks magic number value to be set for all
	  tasks. this value is specific to each project so
	  that when building tasks for a given project, only these
	  tasks can be added to the kernel bin

config MAX_DEV_PER_TASK
	int "max devices per task"
	range 0 8
	default 4
	help
	  Maximum number of declared device per task

config MAX_SHM_PER_TASK
	int "Maximum mumber of SHM per task"
	range 0 8
	default 4
	help
	  Maximum number of owned shared memory per task

config MAX_DMA_STREAMS_PER_TASK
	int "Maximum mumber of DMA streams per task"
	range 0 8
	default 4
	help
      Maximum number of declared DMA streams per task

endmenu

if !BUILD_TARGET_RELEASE

menu "Debug manager"

config DEBUG_COLORS
	bool "Support for ANSI colors support"
	default n
	help
	  Activate ANSI coloration on serial console for kernel debugging
	  output. Userspace log is not impacted

if DEBUG_COLORS

choice
	bool "ANSI color mode"
	default DEBUG_COLORS_REGULAR
config DEBUG_COLORS_REGULAR
	bool "regular message highlighting"
	help
	  kernel messages are highighted using foreground color, regular mode
config DEBUG_COLORS_BOLD
	bool "bold message highlighting"
	help
	  kernel messages are highighted using foreground color, bold mode
config DEBUG_COLORS_BACKGROUND
	bool "background message highlighting"
	help
	  kernel messages are highighted using background color
endchoice

choice
	bool "Default text color"
	default DEBUG_COLOR_DEFAULT_WHITE
config DEBUG_COLOR_DEFAULT_WHITE
	bool "default text color to white"
config DEBUG_COLOR_DEFAULT_BLACK
	bool "default text color to black"
endchoice


endif

config DEBUG_LEVEL
	int "kernel debug level"
	range 0 8
	default 7
	help
	  Kernel activated debug level, from 0 (no debug) upto 8 (all debug)
	  debug levels are the following:
	  - 0 : no debug
	  - 1 : emerg
	  - 2 : emerg, alert
	  - 3 : emerg, alert, critical
	  - 4 : emerg, alert, critical, error
	  - 5 : emerg, alert, critical, error, warning
	  - 6 : emerg, alert, critical, error, warning, notice
	  - 7 : emerg, alert, critical, error, warning, notice, info
	  - 8 : emerg, alert, critical, error, warning, notice, info, debug
	  autotest-specific logging is not impacted by debug level

endmenu

endif

menu "Security manager"

# symbols selected by build mode
config SECU_SSP_USER
	bool
	# support for user threads stack canaries

config SECU_SSP_KERN
	bool
	# support for kernel threads stack canaries

config SECU_HW_SETNCHECK
	bool
	---help---
	  when possible (may depend on the hardware device), double verify that
	  the target register configuration is valid and active
	# Unable set and check of critical hardware registers
	# (iowrite + ioread and compare)

config SECU_NO_WEAKTYPES
	bool
	---help---
	  Comparison to 0 lead to potential weak optimizations that should be
	  avoided in security critical environment. In the same way, hamming distance
	  of 1 can be easily faulted, in comparison with a discrete type

config SECU_LOOP_DBLE_IDX
	bool
	# Double index count and check in critical loops

config SECU_TASK_INTEGRITY_AT_BOOT
	bool

config SECU_ENFORCE_FAULT_INJECTION
	bool "Enforce fault injection projections"
	---help---
	  Enable this flag to enforce formally proven execution
	  paths with supplementary checks that whould have been dead
	  code in nominal execution

endmenu

endmenu
