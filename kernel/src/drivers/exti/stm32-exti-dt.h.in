// SPDX-FileCopyrightText: 2023 Ledger SAS
// SPDX-License-Identifier: Apache-2.0

#ifndef __STM32_EXTI_DT_GENERATED_H
#define __STM32_EXTI_DT_GENERATED_H

{%- if dts.exti.status == "okay" %}

/*
 * XXX:
 *  NVIC interrupt line are lesser or equal that the EXTI event/interrupts
 *  depending on the SOC.
 *  E.g. SM32U5 COMP1/COMP2 are EXTI line 17/18 but share the same IRQ line
 *  on NVIC if configured as interrupt.
 *
 * TODO:
 *  Add binding between event number and nvic irq line in dts
 *   â†³ this requires IRQ owned by kernel that dispatch EXTI Interrupt to userspace
 *  Add exti interrupt configuration capability (irq/event, edge) in dts
 *  Add exti based irq for userspace
 */

/**
 * @def number of external interrupts supported by EXTI device
 */
#define EXTI_NUM_INTERRUPTS {{ dts.exti|interrupts|length|int }}UL

{%- set num_ev = dts.exti['events'] %}
/**
 * @def number of external events supported by EXTI device
 */
#define EXTI_NUM_EVENTS {{ num_ev|int }}UL
{%- endif %}

/**
 * \brief STM32 EXTI IP descriptor
 *
 * Descriptor is feed from device tree file
 *
 * \note Only node w/ compatible="st,stm32-exti" and status="okay" properties
 *       will be parsed
 */
typedef struct stm32_exti_desc {
    uint32_t base_addr; /**< IP base address */
    size_t   size;      /**< IP size */
} stm32_exti_desc_t;

const stm32_exti_desc_t * stm32_exti_get_desc(void);

#endif /* __STM32_EXTI_DT_GENERATED_H */
